Разберём подробно как работает программа на python

1. Для програмной реализации испоользуется стандартная библиотека scikit-learn.
Можно написать не используя, для этого нужно самому задать выборку и алгоритм который будет с ней работать.

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.colors import ListedColormap
from sklearn import neighbors, datasets

2. объявляется глобалльная переменная и присваивается ей значение. Эта переменная хранит значение K - количество ближайших 
соседей которое будет искаться. 
n_neighbors = 15

3. Объявляем переменную iris и присваиваем ей значение стандартной выборки iris из библиотеки, которую вызвали в начале. В этой строке
from sklearn import neighbors, datasets
  Выборка iris представляет из себя таблицу 150 строк на 4 столбца. 
iris = datasets.load_iris() 

4. Так как нам нужна выборка точек на плоскости, то нам нужна таблица 150 строк на 2 столбца, номер строки - номер точки, 
первый столбец хранит координату точек по горизонтали, а второй по вертикали. Объявим переменную присвоим ей матрицу с двумя стоблцами
X = iris.data[:, :2]

5. Пока что у нас есть матрица 150 строк на 2 столбца или же 150 точек с заданными координатами по горизонтали и вертикали. 
Теперь нужно каждой точке сопоставить признак 1 из трёх. В данном случае это 1 из трёх цветов. Объявим переменную присвоим 
ей строку признаков.
y = iris.target

6. объявим размер шага в сетке, цвета точек на плоскости и цвета которыми будем закрашивать плоскость.
h = 0.02  # step size in the mesh # размер шага в сетке
cmap_light = ListedColormap(['#bafffc', '#ffdede','#abffbd']) #цвета площадок
cmap_bold = ListedColormap(['Blue', 'Red', 'Lime']) #цвета точке

7. 
