"""
простейший пример метода K-ближайших соседей
есть точки на плоскости, каждая из которых имеет координаты - по горизонтали и вертикали
и принадлежит одному из двух классов
  двумерный массив X[[][]] хранит координаты точек
  массив y[] хранит - к какому классу принадлежит каждая точка 
  
  даётся новая точка которую нужно отнести к одному из двух классов
"""

import numpy as np
from sklearn import neighbors, datasets

X = np.array([[-1, -1], [-2, -1], [-3, -2], [1, 1], [2, 1], [3, 2]]) # массив точек на плоскости
y = np.array([1, 1, 1, 2, 2, 2]) # массив ответов к точкам. каждая точка принадлежит одному из двух классов 

n_neighbors = 3 # K-целое значение, указанное пользователем. Количество соседей которое будет искаться

clf = neighbors.KNeighborsClassifier(n_neighbors, weights = 'uniform') # объявляю экземпляр класса # параметр весовой функции может принимать 2 значения 'uniform' или 'distance'
clf.fit(X, y) # передаю данные функции экземпляра класса

new_tochka = [-0.8, -1] # объявляю новую точку, которую нужно классифицировать к одному из двух классов. 
print("точка ", new_tochka," принадлежит классу = ", clf.predict([new_tochka])) # вывожу на экран к какому классу принадлежит данная точка
